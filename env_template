# Postgres 
POSTGRES_USER=pzadmin
POSTGRES_PASSWORD=adminpz
POSTGRES_DB=pzdev

# If you're running native Linux and your uid:gid isn't 1000:1000 you can set
# these to match your values before you build your image. You can check what
# your uid:gid is by running `id` from your terminal.
# export USERID=1000       # uid
# export GROUPID=1000      # gid
# export USERNAME=pzapp    # container user

# Backend/Django
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG=1
LOGGING_LEVEL=DEBUG
# AUTORELOAD: Select 1 to enable auto reload and 0 to turn off. In production we must 
# disable it.
AUTORELOAD=1
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY=JUlNLdVQ2SF_xRdcwsUVjnqecHf1cqHW4B9iuofmyvY

# Database
DB_ENGINE=django.db.backends.postgresql
DB_USER=pzadmin
DB_PASSWORD=adminpz
DB_DATABASE=pzdev
DB_HOST=database
DB_PORT=5432

# CORS
DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
DJANGO_CSRF_TRUSTED_ORIGINS=http://localhost http://127.0.0.1

# Frontend
# Client ID e Client Secret devem ser cadastradas no Django Admin
# Apos o Setup do backend, na interface Django Oauth Aplications
# DJANGO_OAUTH_CLIENT_ID= Fz6kPRSGbB10urMGbo6OcFyZ2MhBivfdJ6sAKVow
# DJANGO_OAUTH_CLIENT_SECRET= uFrvcAK5utGUcAu8VDArT6o24hYhZQjwVq3mQ2XT0OgKPWZ7Crd3CKvSa6n1RxXwDfpADmnmsuyNJFS67OuSss73v60j6JinZnrWIlgbKGEVvXRCw8KUcgM4SJmbgz3H

# Github OAuth
# To enable Github OAuth authentication, 
# uncomment and fill in the following variables.
#GITHUB_CLIENT_ID=
#GITHUB_CLIENT_SECRET=
#GITHUB_ORG_NAME=linea-it

# Shibboleth / Satosa Auth
# Url para login utilizando Shibboleth
# AUTH_SHIB_URL=