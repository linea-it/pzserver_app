version: "3.9"

services:
  database:
    image: postgres:13.6-alpine
    env_file:
      - .env
    expose:
      # Deixa a porta do banco de dados acessivel 
      # para ferramentas externas como o dbeaver por exemplo.
      - 5432
    volumes:
      - ./pg_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      args:
        - "USERID=${USERID:-1000}"
        - "GROUPID=${GROUPID:-1000}"
        - "USERNAME=${USERNAME:-pzapp}"
    command: /start.sh
    user: "1000:1000"
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - ./archive/log/backend:/archive/log
      - ./archive/data:/archive/data
    depends_on:
      - database

  frontend:
    image: node:lts
    user: "1000:1000"
    working_dir: /app
    volumes:
      - ./frontend:/app
      - ./.env.local:/app/.env.local
    stdin_open: true
    command: yarn dev

  orchestration:
    extends:
      file: ./orchestration/docker-compose.yml
      service: orchestration

  celery_local_worker:
    extends:
      file: ./orchestration/docker-compose.yml
      service: celery_local_worker

  celery_flower:
    extends:
      file: ./orchestration/docker-compose.yml
      service: celery_flower

  rabbitmq:
    image: "rabbitmq:3.12.12-management"
    hostname: "rabbitmq"
    env_file:
      - ./orchestration/.orchestration-env
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - "./orchestration/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins"
      - "./orchestration/rabbitmq/data/:/var/lib/rabbitmq/"
      - "./orchestration/rabbitmq/log/:/var/log/rabbitmq/"

  nginx:
    image: nginx:1.21.6-alpine
    ports:
      - 80:8080
    volumes:
      - ./nginx_development.conf:/etc/nginx/conf.d/default.conf:ro
      - ./archive/data:/var/www/data
      - ./backend/htmlcov:/var/www/coverage
    depends_on:
      - backend
      - frontend
      - orchestration
      - rabbitmq
      - celery_flower