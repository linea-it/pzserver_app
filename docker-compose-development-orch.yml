name: "pz"

services:
  database:
    image: postgres:13.6-alpine
    env_file:
      - .env
    expose:
      # Deixa a porta do banco de dados acessivel
      # para ferramentas externas como o dbeaver por exemplo.
      - 5432
    networks:
      - default
    volumes:
      - ./pg_data:/var/lib/postgresql/data

  backend: &pzbackend
    build:
      context: ./backend
      args:
        - "USERID=${USERID:-1000}"
        - "GROUPID=${GROUPID:-1000}"
        - "USERNAME=${USERNAME:-pzapp}"
    command: /start.sh
    user: "${USERID:-1000}:${GROUPID:-1000}"
    env_file:
      - .env
    networks:
      - default
      - orchestration-network
    volumes:
      - ./backend:/app
      - ./archive/log/backend:/archive/log
      - ./archive/data:/archive/data
      - ./orchestration/pipelines:/pipelines
      - ./orchestration/processes:/processes
      - ./orchestration/datasets:/datasets
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - database
      - orchestration-api

  pz-beat:
    <<: *pzbackend
    hostname: "pzbeat"
    command: /app/pz-beat.sh
    depends_on:
      - backend

  pz-worker:
    <<: *pzbackend
    hostname: "pzworker"
    command: /app/worker.sh
    depends_on:
      - backend

  frontend:
    image: node:lts
    user: "1000:1000"
    working_dir: /app
    volumes:
      - ./frontend:/app
      - ./.env.local:/app/.env.local
    stdin_open: true
    command: yarn dev
    networks:
      - default

  orchestration-api:
    extends:
      file: ./orchestration/docker-compose.yml
      service: orchestration-api

  orchestration-local-worker:
    extends:
      file: ./orchestration/docker-compose.yml
      service: orchestration-local-worker

  orchestration-flower:
    extends:
      file: ./orchestration/docker-compose.yml
      service: orchestration-flower

  rabbitmq:
    extends:
      file: ./orchestration/docker-compose.yml
      service: rabbitmq

  orchestrator:
    extends:
      file: ./orchestration/docker-compose.yml
      service: orchestrator

  nginx:
    image: nginx:1.21.6-alpine
    ports:
      - 80:8080
    volumes:
      - ./nginx_development-orch.conf:/etc/nginx/conf.d/default.conf:ro
      - ./archive/data:/var/www/data
      - ./backend/htmlcov:/var/www/coverage
    networks:
      - default
    depends_on:
      - backend
      - frontend
      - rabbitmq
      - orchestration-flower

networks:
  orchestration-network:
    driver: bridge
